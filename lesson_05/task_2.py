'''Написать программу сложения и умножения двух шестнадцатеричных чисел. При этом каждое число представляется как
коллекция, элементы которой это цифры числа.Например, пользователь ввёл A2 и C4F. Сохранить их как [‘A’, ‘2’] и
[‘C’, ‘4’, ‘F’] соответственно. Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

'''
from collections import deque
deс = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F']

z = input("Введите первое число: ").upper()
y = input("Введите второе число: ").upper()


a = deque(z)
b = deque(y)

if len(a) > len(b):                          # выравниваю два числа по длине
    x = len(a) - len(b)
    b.extendleft(['0'] * x)
elif len(a) < len(b):
    x = len(b) - len(a)
    a.extendleft(['0'] * x)
else:
    pass


sum_ = []                                    # список, куда добавляется сумма по столбцу
to_add = 0                                   # та самая цифра, которую "держим в уме"
i = len(a)
while i > 0:
    s = deс.index(a.pop()) + deс.index(b.pop()) + to_add        # нахожу индексы в списке шестнадцатиречного представления
    if s // 16 >= 1:                                            # проверяю, перевалили ли за индекс списка
        sum_.append(deс[s % 16])
        to_add = s // 16                                        # если перевалили, то держим в уме цифру
    else:
        sum_.append(deс[s])
        to_add = 0
    i -= 1

if to_add:
    sum_.append(str(to_add))


print(sum_[::-1])

